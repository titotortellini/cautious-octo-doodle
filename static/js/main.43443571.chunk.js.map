{"version":3,"sources":["images/tw2.svg","components/about.jsx","components/navbar.jsx","components/projectItem.jsx","services/projectsService.js","components/projects.jsx","components/projectPage.jsx","components/intro.jsx","components/contact.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Navbar","className","exact","to","src","logo","alt","ProjectItem","props","link","thumbnail","title","categories","window","location","origin","map","category","key","id","name","projectItems","images","description","Projects","state","portfolioItems","this","setState","items","Fragment","item","Component","ProjectPage","project","parseInt","projectId","find","p","Intro","Contact","Footer","App","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43443571.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tw2.c0bd1145.svg\";","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About</h1>\n      <p>My name is Tim Whalen. I like to make things!</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../images/tw2.svg\";\n\nconst Navbar = () => {\n  return (\n    <header className=\"page-header\">\n      <nav>\n        <ul>\n          <li>\n            <NavLink exact to=\"/\" className=\"nav-item\">\n              <img src={logo} alt=\"The Logo of TW2\" />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/projects\" className=\"nav-item\">\n              Projects\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/about\" className=\"nav-item\">\n              About\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\" className=\"nav-item\">\n              Contact\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../style/App.scss\";\n\nconst ProjectItem = props => {\n  const { link, thumbnail, title, categories } = props;\n  return (\n    <div className=\"portfolio-item\">\n      <Link to={link}>\n        <div className=\"project-image\">\n          <img src={window.location.origin + thumbnail} alt=\"Project Detail\" />\n        </div>\n        <h3 className=\"project-title\">{title}</h3>\n\n        <div className=\"project-categories\">\n          {categories.map(category => (\n            <div key={category.id} className=\"project-category\">\n              {category.name}\n            </div>\n          ))}\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default ProjectItem;\n","const projectItems = [\n  {\n    id: 1,\n    title: \"St. Louis City Recycles\",\n    thumbnail: \"/images/stlcityrecycles-cover.jpg\",\n    images: [\"\", \"\", \"\"],\n    categories: [\n      { id: 1, name: \"Web Design\" },\n      { id: 2, name: \"Front End Web Development\" },\n      { id: 3, name: \"Logo/Identity Design\" }\n    ],\n    link: \"/projects/stl-recycles\",\n    description:\n      \"St. Louis City Recycles is an information campaign comissioned by Brightside STL to increase public education in regards to recycling.\"\n  },\n  {\n    id: 2,\n    title: \"KDHX\",\n    thumbnail: \"/images/kdhx-cover.jpg\",\n    images: [\"\", \"\", \"\"],\n    categories: [\n      { id: 1, name: \"Web Design\" },\n      { id: 2, name: \"Front End Web Development\" }\n    ],\n    link: \"/projects/kdhx\"\n  },\n  {\n    id: 3,\n    title: \"Rosemann and Associates\",\n    thumbnail: \"/images/rosemann-lg.jpg\",\n    link: \"/projects/rosemann\",\n    categories: [\n      { id: 1, name: \"Web Design\" },\n      { id: 2, name: \"Front End Web Development\" },\n      { id: 3, name: \"Logo/Identity Design\" }\n    ]\n  }\n];\n\nexport function getProjectItems() {\n  return projectItems;\n}\n\nexport function getProjectsByCategory(id) {\n  // not working yet... try Obj.entries?? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n  console.log(id);\n\n  console.log(projectItems.filter(p => p.categories.id === id));\n\n  return projectItems.filter(p => p.categories.id === id);\n}\n\nexport function getProject(id) {\n  return projectItems.find(p => p.id === id);\n}\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./projectItem\";\nimport { getProjectItems } from \"../services/projectsService\";\n\nclass Projects extends Component {\n  state = { portfolioItems: [] };\n\n  componentDidMount() {\n    this.setState({ portfolioItems: getProjectItems() });\n  }\n  render() {\n    const { portfolioItems: items } = this.state;\n\n    return (\n      <React.Fragment>\n        <h1>My Work</h1>\n\n        <div className=\"portfolio-items-wrap\">\n          {items.map(item => (\n            <ProjectItem\n              key={item.id}\n              title={item.title}\n              categories={item.categories}\n              thumbnail={item.thumbnail}\n              link={item.link}\n            />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport { getProject } from \"../services/projectsService\";\nimport { Link } from \"react-router-dom\";\n\nclass ProjectPage extends Component {\n  state = {\n    project: {\n      categories: []\n    }\n  };\n\n  componentDidMount() {\n    const project = getProject(parseInt(this.props.projectId));\n    this.setState({ project });\n  }\n\n  render() {\n    const { title, description, thumbnail, categories } = this.state.project;\n\n    return (\n      <React.Fragment>\n        <h1>{title}</h1>\n        {/* <div className=\"project-categories\">\n          {categories.map(category => (\n            <Link key={category.id} to={`/projects/category/${category.id}`}>\n              {category.name}\n            </Link>\n          ))}\n        </div> */}\n        <p>{description}</p>\n        <img src={thumbnail} alt=\"Project Thumbnail\" />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectPage;\n","import React from \"react\";\n\nconst Intro = props => {\n  return (\n    <React.Fragment>\n      <h1>Welcome!!!</h1>\n    </React.Fragment>\n  );\n};\n\nexport default Intro;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <React.Fragment>\n      <h1>Get In Touch</h1>\n      <p>Let's chat!!!</p>\n    </React.Fragment>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer\">\n      <p>Footer!!!!</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"./components/about\";\nimport Navbar from \"./components/navbar\";\nimport Projects from \"./components/projects\";\nimport ProjectPage from \"./components/projectPage\";\nimport Intro from \"./components/intro\";\nimport Contact from \"./components/contact\";\nimport Footer from \"./components/footer\";\nimport \"./style/App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"page-wrapper\">\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/projects/category/:id\" component={Projects} />\n          <Route\n            path=\"/projects/stl-recycles\"\n            render={() => <ProjectPage projectId=\"1\" />}\n          />\n          <Route\n            path=\"/projects/kdhx\"\n            render={() => <ProjectPage projectId=\"2\" />}\n          />\n          <Route\n            path=\"/projects/rosemann\"\n            render={() => <ProjectPage projectId=\"3\" />}\n          />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route exact path=\"/\" component={Intro} />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}